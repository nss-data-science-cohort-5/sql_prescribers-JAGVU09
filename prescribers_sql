/* 1. a. Which prescriber had the highest total number of claims (totaled over all drugs)? 
		Report the npi and the total number of claims.
		b. Repeat the above, but this time report the nppes_provider_first_name, 
			nppes_provider_last_org_name,  specialty_description, and the total number of claims. */
--A.
SELECT PRESCRIBER.NPI,
	SUBQUERY.TOTAL_CLAIMS
FROM PRESCRIBER,(
	SELECT NPI, SUM(TOTAL_CLAIM_COUNT) AS TOTAL_CLAIMS
				 FROM PRESCRIPTION
				 GROUP BY NPI) AS SUBQUERY
WHERE PRESCRIBER.NPI = SUBQUERY.NPI
ORDER BY TOTAL_CLAIMS DESC;
--NPI 1881634483 had 99707 claims

--Try with a join instead of subquery. 
SELECT PRESCRIBER.NPI,
	SUM(PRESCRIPTION.TOTAL_CLAIM_COUNT) AS TOTAL_CLAIMS
FROM PRESCRIBER
RIGHT JOIN PRESCRIPTION ON PRESCRIPTION.NPI = PRESCRIBER.NPI
GROUP BY PRESCRIBER.NPI
ORDER BY TOTAL_CLAIMS DESC;

--B.
SELECT PRESCRIBER.NPI,
	NPPES_PROVIDER_FIRST_NAME,
	NPPES_PROVIDER_LAST_ORG_NAME,
	SPECIALTY_DESCRIPTION,
	SUBQUERY.TOTAL_CLAIMS
FROM PRESCRIBER,
	(SELECT NPI,
			SUM(TOTAL_CLAIM_COUNT) AS TOTAL_CLAIMS
		FROM PRESCRIPTION
		GROUP BY NPI) AS SUBQUERY
WHERE PRESCRIBER.NPI = SUBQUERY.NPI
ORDER BY TOTAL_CLAIMS DESC; 

--Try with a join instead of subquery. 
SELECT PRESCRIBER.NPI,
	PRESCRIBER.NPPES_PROVIDER_FIRST_NAME || ' ' ||
	PRESCRIBER.NPPES_PROVIDER_LAST_ORG_NAME AS provider,
	PRESCRIBER.SPECIALTY_DESCRIPTION,
	SUM(PRESCRIPTION.TOTAL_CLAIM_COUNT) AS TOTAL_CLAIMS
FROM PRESCRIBER
RIGHT JOIN PRESCRIPTION ON PRESCRIPTION.NPI = PRESCRIBER.NPI
GROUP BY PRESCRIBER.NPI,
	PRESCRIBER.NPPES_PROVIDER_FIRST_NAME,
	PRESCRIBER.NPPES_PROVIDER_LAST_ORG_NAME,
	PRESCRIBER.SPECIALTY_DESCRIPTION
ORDER BY TOTAL_CLAIMS DESC;

/*2. a. Which specialty had the most total number of claims (totaled over all drugs)?

    b. Which specialty had the most total number of claims for opioids?

    c. **Challenge Question:** Are there any specialties that appear in the prescriber 
	table that have no associated prescriptions in the prescription table?

    d. **Difficult Bonus:** *Do not attempt until you have solved all other problems!* 
	For each specialty, report the percentage of total claims by that specialty which are for 
	opioids. Which specialties have a high percentage of opioids?
*/

--A. Family Practice had the highest total number of claims.
SELECT PRESCRIBER.SPECIALTY_DESCRIPTION,
	SUM(PRESCRIPTION.TOTAL_CLAIM_COUNT) AS TOTAL_CLAIMS
FROM PRESCRIBER
RIGHT JOIN PRESCRIPTION
ON PRESCRIPTION.NPI = PRESCRIBER.NPI
GROUP BY PRESCRIBER.SPECIALTY_DESCRIPTION
ORDER BY TOTAL_CLAIMS DESC;

--B. Nurse Practitioners slinging pills! 
SELECT PRESCRIBER.SPECIALTY_DESCRIPTION, drug.opioid_drug_flag,
	SUM(PRESCRIPTION.TOTAL_CLAIM_COUNT) AS TOTAL_CLAIMS
FROM PRESCRIBER
JOIN PRESCRIPTION ON PRESCRIPTION.NPI = PRESCRIBER.NPI
JOIN drug ON drug.drug_name = prescription.drug_name
WHERE drug.opioid_drug_flag = 'Y'
GROUP BY PRESCRIBER.SPECIALTY_DESCRIPTION, drug.opioid_drug_flag
ORDER BY TOTAL_CLAIMS DESC;

--C.
SELECT DISTINCT specialty_description, SUM(total_claim_count) AS total_claims
FROM prescriber
FULL JOIN prescription
ON prescriber.npi = prescription.npi
GROUP BY specialty_description
HAVING (SUM(total_claim_count) IS NULL)
ORDER BY total_claims;

/*3. a. Which drug (generic_name) had the highest total drug cost?

    b. Which drug (generic_name) has the hightest total cost per day?
	**Bonus: Round your cost per day column to 2 decimal places. Google ROUND to see how this works.
*/

--A Insulin is expensive. 
SELECT SUM(total_drug_cost)::MONEY AS total_cost, generic_name
FROM prescription
JOIN drug
ON prescription.drug_name = drug.drug_name
GROUP BY generic_name
ORDER BY total_cost DESC;

--B C1 ESTERASE INHIBITOR 3495.22
SELECT ROUND(SUM(total_drug_cost)/SUM(total_day_supply), 2)::MONEY AS cost_per_day, generic_name 
FROM prescription
JOIN drug
ON prescription.drug_name = drug.drug_name
GROUP BY generic_name
ORDER BY cost_per_day DESC;

/* 4. a. For each drug in the drug table, return the drug name and then a column named 'drug_type'
which says 'opioid' for drugs which have opioid_drug_flag = 'Y', says 'antibiotic' for those drugs
which have antibiotic_drug_flag = 'Y', and says 'neither' for all other drugs.

    b. Building off of the query you wrote for part a, 
	determine whether more was spent (total_drug_cost) on opioids or on antibiotics. 
	Hint: Format the total costs as MONEY for easier comparision.
*/

--A.
SELECT DRUG_NAME,
	CASE
					WHEN OPIOID_DRUG_FLAG = 'Y' THEN 'opioid'
					WHEN ANTIBIOTIC_DRUG_FLAG = 'Y' THEN 'antibiotic'
					ELSE 'neither'
	END AS DRUG_TYPE
FROM DRUG;

--B.
SELECT SUM(TOTAL_DRUG_COST)::MONEY,
	CASE
					WHEN OPIOID_DRUG_FLAG = 'Y' THEN 'opioid'
					WHEN ANTIBIOTIC_DRUG_FLAG = 'Y' THEN 'antibiotic'
	END AS DRUG_TYPE
FROM DRUG
JOIN PRESCRIPTION ON PRESCRIPTION.DRUG_NAME = DRUG.DRUG_NAME
GROUP BY DRUG_TYPE;

/* 
5. a. How many CBSAs are in Tennessee? **Warning:** The cbsa table
contains information for all states, not just Tennessee.

    b. Which cbsa has the largest combined population? Which has the
	smallest? Report the CBSA name and total population.

    c. What is the largest (in terms of population) county which is 
	not included in a CBSA? Report the county name and population.
*/

--A. 10
SELECT COUNT(DISTINCT CBSA),
	STATE
FROM CBSA
JOIN FIPS_COUNTY ON CBSA.FIPSCOUNTY = FIPS_COUNTY.FIPSCOUNTY
WHERE STATE = 'TN'
GROUP BY STATE;

--B. Nashville-Davidson-Murfreesboro-Franklin is the largest. Morristown is the smallest. 
SELECT 
	CBSANAME,
	SUM(POPULATION) AS POP_SUM
FROM CBSA
JOIN POPULATION ON CBSA.FIPSCOUNTY = POPULATION.FIPSCOUNTY
GROUP BY CBSA,
	CBSANAME
ORDER BY POP_SUM DESC;

--C. Sevier county

SELECT COUNTY,
	POPULATION
FROM FIPS_COUNTY
INNER JOIN POPULATION ON FIPS_COUNTY.FIPSCOUNTY = POPULATION.FIPSCOUNTY
FULL JOIN CBSA ON FIPS_COUNTY.FIPSCOUNTY = CBSA.FIPSCOUNTY
WHERE CBSA IS NULL
ORDER BY POPULATION DESC
;

/*
6. 
    a. Find all rows in the prescription table where total_claims is at least 3000.
	Report the drug_name and the total_claim_count.

    b. For each instance that you found in part a, add a column that indicates whether
	the drug is an opioid.

    c. Add another column to you answer from the previous part which gives the prescriber
	first and last name associated with each row.
*/

--A.

SELECT drug_name, SUM(total_claim_count) AS total_claim
FROM prescription
WHERE total_claim_count >= 3000
GROUP BY drug_name;

--B.
SELECT drug.drug_name, SUM(total_claim_count) AS total_claim, drug.opioid_drug_flag AS Is_opioid
FROM prescription
JOIN drug ON drug.drug_name = prescription.drug_name
WHERE total_claim_count >= 3000 
GROUP BY drug.drug_name, Is_opioid;

--C. I'm not sure this is correct. I think I don't understand the question
SELECT drug.drug_name, SUM(total_claim_count) AS total_claim, drug.opioid_drug_flag AS Is_opioid,
	PRESCRIBER.NPPES_PROVIDER_FIRST_NAME || ' ' ||
	PRESCRIBER.NPPES_PROVIDER_LAST_ORG_NAME AS provider
FROM prescription
JOIN drug ON drug.drug_name = prescription.drug_name
JOIN prescriber ON PRESCRIBER.NPI = PRESCRIBER.NPI
WHERE total_claim_count >= 3000 
GROUP BY drug.drug_name, Is_opioid, PROVIDER;

/*
7. The goal of this exercise is to generate a full list of all pain management specialists in
Nashville and the number of claims they had for each opioid.
    a. First, create a list of all npi/drug_name combinations for pain management 
	specialists (specialty_description = 'Pain Managment') in the city of Nashville
	(nppes_provider_city = 'NASHVILLE'), where the drug is an opioid (opiod_drug_flag = 'Y').
	
	**Warning:** Double-check your query before running it. 
	You will likely only need to use the prescriber and drug tables.

    b. Next, report the number of claims per drug per prescriber. Be sure to include all
	combinations, whether or not the prescriber had any claims. You should report the npi,
	the drug name, and the number of claims (total_claim_count).
    
    c. Finally, if you have not done so already, fill in any missing values for total_claim_count
	with 0. Hint - Google the COALESCE function.

*/

--A.
SELECT COUNT(DISTINCT drug_name)
FROM drug
WHERE opioid_drug_flag = 'Y';
--91
SELECT COUNT(distinct npi)
FROM prescriber
WHERE specialty_description = 'Pain Management' 
AND nppes_provider_city = 'NASHVILLE'
--7

SELECT prescriber.npi, drug.drug_name
FROM prescriber
CROSS JOIN drug
WHERE specialty_description = 'Pain Management' 
AND nppes_provider_city = 'NASHVILLE'
AND drug.opioid_drug_flag = 'Y'
--637

--B.
/*Next, report the number of claims per drug per prescriber. Be sure to include all
	combinations, whether or not the prescriber had any claims. You should report the npi,
	the drug name, and the number of claims (total_claim_count).*/
SELECT
	DISTINCT p.npi,
	d.drug_name,
	COALESCE(SUM(p1.total_claim_count), 0) AS total_claims
FROM prescriber p
CROSS JOIN drug d
FULL JOIN prescription p1 ON d.drug_name = p1.drug_name AND p.npi = p1.npi
WHERE d.opioid_drug_flag = 'Y'
AND p.specialty_description = 'Pain Management'
AND p.nppes_provider_city = 'NASHVILLE'
GROUP BY p.npi, d.drug_name
;

	SELECT 
	total_claim_count AS total_claims
	FROM prescription

WITH d_opioid AS (
	SELECT drug_name
	FROM drug
	WHERE opioid_drug_flag = 'Y'
)
SELECT scribe.npi, d_opioid.drug_name
FROM prescriber as scribe
	CROSS JOIN d_opioid
WHERE scribe.specialty_description = 'Pain Management'
AND scribe.nppes_provider_city = 'NASHVILLE'

SELECT
	DISTINCT p.npi,
	d.drug_name,
	COALESCE(p1.total_claim_count, 0) AS total_claims
FROM prescriber p
CROSS JOIN drug d
LEFT JOIN prescription p1 ON d.drug_name = p1.drug_name
WHERE d.opioid_drug_flag = 'Y'
AND p.specialty_description = 'Pain Management'
AND p.nppes_provider_city = 'NASHVILLE'
ORDER BY 1
;

SELECT
	p1.npi,
	p1.drug_name,
	COALESCE(sum(p1.total_claim_count), 0) AS total_claims
FROM prescriber p
CROSS JOIN drug d
LEFT JOIN prescription p1 ON d.drug_name = p1.drug_name
WHERE d.opioid_drug_flag = 'Y'
AND p.specialty_description = 'Pain Management'
AND p.nppes_provider_city = 'NASHVILLE'
group by p1.drug_name, p1.npi
ORDER BY p1.drug_name

SELECT
	DISTINCT p.npi,
	d.drug_name,
	COALESCE(SUM(p1.total_claim_count), 0) AS total_claims
FROM prescriber p
CROSS JOIN drug d
LEFT JOIN prescription p1 ON d.drug_name = p1.drug_name AND p.npi = p1.npi
WHERE d.opioid_drug_flag = 'Y'
AND p.specialty_description = 'Pain Management'
AND p.nppes_provider_city = 'NASHVILLE'
GROUP BY 1,2
ORDER BY 3 DESC
;

SELECT prescriber.npi, drug.drug_name, COALESCE(SUM(total_claim_count), 0) AS total_claims
FROM prescriber
WHERE specialty_description = 'Pain Management' 
AND nppes_provider_city = 'NASHVILLE'
CROSS JOIN drug
WHERE drug.opioid_drug_flag = 'Y'
FROM prescription p1
LEFT JOIN on prescriber.npi = prescription.npi ;


